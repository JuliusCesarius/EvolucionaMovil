@using PagedList.Mvc
@using EvolucionaMovil.Models.Extensions

@model EvolucionaMovil.Areas.MvcMembership.Models.Users.IndexViewModel
@{
	ViewBag.Title = "User Administration";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href='@Url.Content("~/Content/MvcMembership.css")' rel="stylesheet" type="text/css" />
<link href='@Url.Content("~/Content/PagedList.css")' rel="stylesheet" type="text/css" />

@if(!Model.IsRolesEnabled){
	<p class="mvcMembership-warning">WARNING: Your Role Provider is currently disabled - any user may currently visit this page.<br />Change &lt;roleManager enabled="false"&gt; to &lt;roleManager enabled="true"&gt; in your web.config file.</p>
}

<h2 class="mvcMembership">Administracion de Usuarios</h2>


<form method="get" class="mvcMembership-searchForm">
    <h3 class="mvcMembership">
        Buscar Usuario
        @if (!string.IsNullOrWhiteSpace(Model.Search))
        { 
            <span>(@Html.ActionLink("Clear Search", "Index"))</span>
        }
    </h3>
    <input type="text" placeholder="Nombre de usuario o email" name="search" value="@Model.Search" />
    <input type="submit" class="freshbutton-blue" value="Search" />
</form>
<br />
<h3 class="mvcMembership">Usuarios (@Html.ActionLink("Nuevo usuario", "CreateUser", "Users"))</h3>
<br />
<br />
<div class="mvcMembership-allUsers">
@if(Model.Users.Count > 0){
	<ul class="mvcMembership mvcMembership-users">
		@foreach(var user in Model.Users){
		<li>
			<span class="mvcMembership-username">@Html.ActionLink(user.UserName, "Details", new{ id = user.ProviderUserKey})</span>
			<span class="mvcMembership-roles">
                @foreach (var role in Roles.GetRolesForUser(user.UserName))
                {
				    <h5>@role</h5>
                }
            </span>
			<span class="mvcMembership-email"><a href="mailto:@user.Email">@user.Email</a></span>
			@if(user.IsOnline){
				<span class="mvcMembership-isOnline">Online</span>
			}else{
				<span class="mvcMembership-isOffline">Offline for
					@{
						var offlineSince = (DateTime.UtcNow.GetCurrentTime() - user.LastActivityDate);
						if (offlineSince.TotalSeconds <= 60){
							<text>1 minute.</text>
						}else if(offlineSince.TotalMinutes < 60){
							<text>@Math.Floor(offlineSince.TotalMinutes) minutes.</text>
						}else if (offlineSince.TotalMinutes < 120){
							<text>1 hour</text>
						}else if (offlineSince.TotalHours < 24){
							<text>@Math.Floor(offlineSince.TotalHours) hours.</text>
						}else if (offlineSince.TotalHours < 48){
							<text>1 day.</text>
						}else{  
							<text>@Math.Floor(offlineSince.TotalDays) days.</text>
						}
					}
				</span>
			}
		</li>
  }
	</ul>
	@Html.PagedListPager(Model.Users, page => Url.Action("Index", new { page, search = Model.Search }))
}
else
{
	<p>No users have registered.</p>
}
</div>

