@using EvolucionaMovil.Models.Enums
@model EvolucionaMovil.Models.PagoVM
@{
    ViewBag.Title = "Create";
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/PagoServicios-Create.js")" type="text/javascript"></script>

<div class="formLeft pagservimg"></div>
<div class="formRight">
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Reportar Pago</legend>
        @{var hiddenString = "style=display:none";}

        <div class="pagservsal resumen saldos" @(Model.PayCenterId > 0 ? string.Empty : hiddenString)>
            <h3>
                Saldo Disp. <span id="saldoDisponible">@ViewData["SaldoDisponible"]</span></h3>            
            <h3>
                / Eventos <span id="eventoDisponible">@ViewData["Eventos"]</span></h3>
            <a href="/Paquetes/Buy">[comprar]</a>
            <div class="clear"></div>
                        
          <input type="hidden" id="hddSaldoDisponible"  value ="@ViewData["SaldoDisponible"]"  />
          <input type="hidden" id="hddEventos"   value ="@ViewData["Eventos"]"/>
           <input type="hidden" id="hddComision"   value ="@ViewData["Comision"]"/>
           <input type="hidden" id="hddMaximoFinanciar"   value ="@ViewData["MaximoFinanciar"]"/>
            
        </div>
        @if (HttpContext.Current.User.IsInRole(enumRoles.Staff.ToString()) || HttpContext.Current.User.IsInRole(enumRoles.Administrator.ToString()))
        {
            <div class="editor-label"><label for="PayCenterName">PayCenters</label></div>        
                <div class="editor-field">
                @Html.EditorFor(model => model.PayCenterName)
                <input type="hidden" id="hddPayCenterId" name="PayCenterId" value="@Model.PayCenterId" />
                @Html.ValidationMessageFor(model => model.PayCenterName)
                </div>
        }                  
        <div class="editor-label">
            @Html.LabelFor(model => model.ServicioId)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.ServicioId, new SelectList(Model.Servicios, "Value", "Text"))
            @Html.ValidationMessageFor(model => model.ServicioId)
        </div>
        <div id="camposAdicionales">
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.ClienteNombre)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ClienteNombre)
            @Html.ValidationMessageFor(model => model.ClienteNombre)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.ImporteString)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.ImporteString, new { @class = "money" })
            @Html.HiddenFor(model => model.Importe)
            @Html.ValidationMessageFor(model => model.Importe)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.FechaVencimiento)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FechaVencimiento)
            @Html.ValidationMessageFor(model => model.FechaVencimiento)
        </div>        
        <div id="ResumenSaldos" class="pagservsal resumen saldos"@(Model.PayCenterId > 0 ? string.Empty : hiddenString)>
            <h3>
                Saldo Final <span id="saldoFinal">@ViewData["SaldoFinal"]</span></h3>
            <h3>
                Eventos <span id="eventoFinal">@ViewData["EventosFinal"]</span>
            </h3>
        </div>

        <div id="divMensaje"class ="accordion" @(hiddenString)>
            <h3 id="Mensaje"></h3>
        </div> 

        <p>
            <input id="btnCreate" type="submit" class="freshbutton-blue" value="Create" />
        </p>
    </fieldset>
}
</div>